{"version":3,"sources":["SortingAlgorithms/SortingAlgorithms.js","Sortingvisualizer/Sortingvisualizer.jsx","App.js","serviceWorker.js","index.js"],"names":["getMergeSortAnimations","array","animations","length","auxillaryArray","slice","mergeSort","startIdx","endIdx","middleIdx","Math","floor","i","j","k","push","a","getQuickSortAnimations","partition","pivot","j1","i1","val","heapify","n","f","s","largest","c","sortingvisualizer","props","state","disabled","func","setTimeout","document","getElementById","style","pointerEvents","this","resetArray","min","max","random","setState","arrayBars","getElementsByClassName","colourChange","bar1Idx","bar2Idx","bar1Style","bar2Style","colour","backgroundColor","barId","barHeight","barStyle","height","bar1","bar2","bar11","bar22","getBubbleSortAnimations","key","getInsertionSortAnimations","idx","cmd","getHeapSortAnimations","className","id","onClick","quickSort","bubbleSort","insertionSort","heapSort","map","value","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e8e4b776.chunk.js","sourcesContent":["export function getMergeSortAnimations(array) {\r\n  let animations = [];\r\n  if (array.length <= 1) return array;\r\n  let auxillaryArray = array.slice();\r\n  mergeSort(array, 0, array.length - 1, animations, auxillaryArray);\r\n  return animations;\r\n}\r\n\r\nfunction mergeSort(array, startIdx, endIdx, animations, auxillaryArray) {\r\n  if (startIdx == endIdx) return;\r\n  const middleIdx = Math.floor((startIdx + endIdx) / 2);\r\n  mergeSort(auxillaryArray, startIdx, middleIdx, animations, array);\r\n  mergeSort(auxillaryArray, middleIdx + 1, endIdx, animations, array);\r\n  var i = startIdx,\r\n    j = middleIdx + 1,\r\n    k = startIdx;\r\n  while (i <= middleIdx && j <= endIdx) {\r\n    animations.push([i, j]);\r\n    animations.push([i, j]);\r\n    if (auxillaryArray[i] < auxillaryArray[j]) {\r\n      array[k] = auxillaryArray[i];\r\n      var a = auxillaryArray[i];\r\n      animations.push([k, a]);\r\n      animations.push([k, a]);\r\n      k++;\r\n      i++;\r\n    } else {\r\n      array[k] = auxillaryArray[j];\r\n      var a = auxillaryArray[j];\r\n      animations.push([k, a]);\r\n      animations.push([k, a]);\r\n      k++;\r\n      j++;\r\n    }\r\n  }\r\n  while (i <= middleIdx) {\r\n    animations.push([i, i]);\r\n    animations.push([i, i]);\r\n    array[k] = auxillaryArray[i];\r\n    var a = auxillaryArray[i];\r\n    animations.push([k, a]);\r\n    animations.push([k, a]);\r\n    k++;\r\n    i++;\r\n  }\r\n  while (j <= endIdx) {\r\n    animations.push([j, j]);\r\n    animations.push([j, j]);\r\n    array[k] = auxillaryArray[j];\r\n    var a = auxillaryArray[j];\r\n    animations.push([k, a]);\r\n    animations.push([k, a]);\r\n    k++;\r\n    j++;\r\n  }\r\n\r\n  return;\r\n}\r\n\r\nexport function getInsertionSortAnimations(array) {\r\n  let animations = [];\r\n  var i, key, j;\r\n  for (i = 0; i < array.length; i++) {\r\n    key = array[i];\r\n    j = i - 1;\r\n    animations.push([i, 1]);\r\n\r\n    while (j >= 0 && array[j] > key) {\r\n      animations.push([j, 2]);\r\n      j--;\r\n    }\r\n    j = i - 1;\r\n    while (j >= 0 && array[j] > key) {\r\n      array[j + 1] = array[j];\r\n      animations.push([j, 2]);\r\n      animations.push([j + 1, array[j]]);\r\n      animations.push([j, 1]);\r\n      j--;\r\n    }\r\n    array[j + 1] = key;\r\n    animations.push([j + 1, key]);\r\n    animations.push([j + 1, 3]);\r\n    animations.push([i, 3]);\r\n  }\r\n  for (let i = 0; i < array.length; i++) animations.push([i, 4]);\r\n  return animations;\r\n}\r\n\r\nexport function getBubbleSortAnimations(array) {\r\n  let animations = [];\r\n  for (let i = 0; i < array.length; i++) {\r\n    for (let j = 0; j < array.length - 1 - i; j++) {\r\n      animations.push([j, 1]);\r\n      animations.push([j + 1, 1]);\r\n      if (array[j] > array[j + 1]) {\r\n        animations.push([j + 1, array[j]]);\r\n        animations.push([j, array[j + 1]]);\r\n        let c = array[j];\r\n        array[j] = array[j + 1];\r\n        array[j + 1] = c;\r\n      }\r\n      animations.push([j, 2]);\r\n      animations.push([j + 1, 2]);\r\n    }\r\n    animations.push([array.length - 1 - i, 3]);\r\n  }\r\n  for (let i = array.length - 1; i >= 0; i--) animations.push([i, 2]);\r\n  return animations;\r\n}\r\n\r\nexport function getQuickSortAnimations(array) {\r\n  let animations = [];\r\n  partition(array, 0, array.length - 1, animations);\r\n  for (let i = 0; i < array.length; i++) animations.push([i, 2]);\r\n  return animations;\r\n}\r\nfunction partition(array, i, j, animations) {\r\n  if (i < j) {\r\n    var pivot = array[j];\r\n    animations.push([j, 1]);\r\n    var j1 = i;\r\n    for (let i1 = i; i1 < j; i1++) {\r\n      if (array[i1] <= pivot) {\r\n        animations.push([j1, array[i1]]);\r\n        animations.push([i1, array[j1]]);\r\n        let val = array[j1];\r\n        array[j1] = array[i1];\r\n        array[i1] = val;\r\n        j1++;\r\n      }\r\n    }\r\n    animations.push([j, array[j1]]);\r\n    animations.push([j1, array[j]]);\r\n    array[j] = array[j1];\r\n    array[j1] = pivot;\r\n    animations.push([j1, 3]);\r\n\r\n    partition(array, i, j1 - 1, animations);\r\n    partition(array, j1 + 1, j, animations);\r\n  } else if (i == j) animations.push([j, 3]);\r\n  return;\r\n}\r\nexport function getHeapSortAnimations(array) {\r\n  let animations = [];\r\n  let n = array.length;\r\n  for (let i = n / 2 - 1; i >= 0; i--) {\r\n    heapify(array, i, n, animations);\r\n  }\r\n\r\n  for (let i = n - 1; i >= 0; i--) {\r\n    let c = array[i];\r\n    array[i] = array[0];\r\n    array[0] = c;\r\n    animations.push([0, 1]);\r\n    animations.push([i, 1]);\r\n    animations.push([0, array[0]]);\r\n    animations.push([i, array[i]]);\r\n    animations.push([i, 4]);\r\n    heapify(array, 0, i, animations);\r\n  }\r\n  for (let i = 0; i < n; i++) animations.push([i, 5]);\r\n  return animations;\r\n}\r\nfunction heapify(array, i, n, animations) {\r\n  let f = 2 * i + 1;\r\n  let s = 2 * i + 2;\r\n  let largest = i;\r\n  animations.push([i, 1]);\r\n  if (f < n) animations.push([f, 1]);\r\n  if (s < n) animations.push([s, 1]);\r\n  if (f < n && array[f] > array[i]) {\r\n    largest = f;\r\n  }\r\n  if (s < n && array[s] > array[largest]) {\r\n    largest = s;\r\n  }\r\n  animations.push([largest, 2]);\r\n  animations.push([i, 2]);\r\n  let c = array[i];\r\n  array[i] = array[largest];\r\n  array[largest] = c;\r\n  animations.push([i, array[i]]);\r\n  animations.push([largest, array[largest]]);\r\n  animations.push([i, 3]);\r\n  if (f < n) animations.push([f, 3]);\r\n  if (s < n) animations.push([s, 3]);\r\n  if (largest != i) heapify(array, largest, n, animations);\r\n\r\n  return;\r\n}\r\n","import React from \"react\";\r\nimport \"./Sortingvisualizer.css\";\r\nimport {\r\n  getMergeSortAnimations,\r\n  getHeapSortAnimations,\r\n} from \"../SortingAlgorithms/SortingAlgorithms.js\";\r\nimport { getInsertionSortAnimations } from \"../SortingAlgorithms/SortingAlgorithms.js\";\r\nimport { getBubbleSortAnimations } from \"../SortingAlgorithms/SortingAlgorithms.js\";\r\nimport { getQuickSortAnimations } from \"../SortingAlgorithms/SortingAlgorithms.js\";\r\n\r\n// Change this value for the speed of the animations.\r\nconst ANIMATION_SPEED_MS = 15;\r\n\r\n// Change this value for the number of bars (value) in the array.\r\nconst NUMBER_OF_ARRAY_BARS = 50;\r\n\r\nexport default class sortingvisualizer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      array: [],\r\n    };\r\n  }\r\n  state = {\r\n    disabled: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.resetArray();\r\n  }\r\n\r\n  resetArray() {\r\n    const array = [];\r\n    for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\r\n      let a = randomIntFromInterval(10, 500);\r\n      array.push(a);\r\n    }\r\n    this.setState({ array });\r\n  }\r\n\r\n  mergeSort() {\r\n    document.getElementById(\"b1\").style.pointerEvents = \"none\";\r\n    document.getElementById(\"b2\").style.pointerEvents = \"none\";\r\n    document.getElementById(\"b3\").style.pointerEvents = \"none\";\r\n    document.getElementById(\"b4\").style.pointerEvents = \"none\";\r\n    document.getElementById(\"b5\").style.pointerEvents = \"none\";\r\n    document.getElementById(\"g1\").style.pointerEvents = \"none\";\r\n    const animations = getMergeSortAnimations(this.state.array);\r\n    this.func(animations.length);\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n      const colourChange = i % 4;\r\n      if (colourChange == 0 || colourChange == 1) {\r\n        const [bar1Idx, bar2Idx] = animations[i];\r\n        const bar1Style = arrayBars[bar1Idx].style;\r\n        const bar2Style = arrayBars[bar2Idx].style;\r\n        const colour = i % 4 === 0 ? \" red\" : \"lightskyblue\";\r\n        setTimeout(() => {\r\n          bar1Style.backgroundColor = colour;\r\n          bar2Style.backgroundColor = colour;\r\n        }, i * ANIMATION_SPEED_MS);\r\n      } else {\r\n        const colour = i % 4 == 2 ? \"blue\" : \"lightskyblue\";\r\n        setTimeout(() => {\r\n          const [barId, barHeight] = animations[i];\r\n          const barStyle = arrayBars[barId].style;\r\n          barStyle.backgroundColor = colour;\r\n          barStyle.height = `${barHeight}px`;\r\n        }, i * ANIMATION_SPEED_MS);\r\n      }\r\n    }\r\n  }\r\n\r\n  quickSort() {\r\n    document.getElementById(\"b1\").style.pointerEvents = \"none\";\r\n    document.getElementById(\"b2\").style.pointerEvents = \"none\";\r\n    document.getElementById(\"b3\").style.pointerEvents = \"none\";\r\n    document.getElementById(\"b4\").style.pointerEvents = \"none\";\r\n    document.getElementById(\"b5\").style.pointerEvents = \"none\";\r\n    document.getElementById(\"g1\").style.pointerEvents = \"none\";\r\n    const animations = getQuickSortAnimations(this.state.array);\r\n    this.func(animations.length);\r\n    const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const [bar1, bar2] = animations[i];\r\n      if (bar2 == 1) {\r\n        setTimeout(() => {\r\n          arrayBars[bar1].style.backgroundColor = \"red\";\r\n        }, i * ANIMATION_SPEED_MS);\r\n      } else if (bar2 == 3) {\r\n        setTimeout(() => {\r\n          arrayBars[bar1].style.backgroundColor = \"green\";\r\n        }, i * ANIMATION_SPEED_MS);\r\n      } else if (bar2 == 2) {\r\n        setTimeout(() => {\r\n          arrayBars[bar1].style.backgroundColor = \"lightskyblue\";\r\n        }, i * ANIMATION_SPEED_MS);\r\n      } else {\r\n        const [bar11, bar22] = animations[i + 1];\r\n        setTimeout(() => {\r\n          arrayBars[bar1].style.backgroundColor = \"red\";\r\n          arrayBars[bar11].style.backgroundColor = \"red\";\r\n          arrayBars[bar1].style.height = `${bar2}px`;\r\n          arrayBars[bar11].style.height = `${bar22}px`;\r\n        }, i * ANIMATION_SPEED_MS);\r\n        setTimeout(() => {\r\n          arrayBars[bar1].style.backgroundColor = \"lightskyblue\";\r\n          arrayBars[bar11].style.backgroundColor = \"lightskyblue\";\r\n        }, i * ANIMATION_SPEED_MS);\r\n        i++;\r\n      }\r\n    }\r\n  }\r\n  bubbleSort() {\r\n    document.getElementById(\"b1\").style.pointerEvents = \"none\";\r\n    document.getElementById(\"b2\").style.pointerEvents = \"none\";\r\n    document.getElementById(\"b3\").style.pointerEvents = \"none\";\r\n    document.getElementById(\"b4\").style.pointerEvents = \"none\";\r\n    document.getElementById(\"b5\").style.pointerEvents = \"none\";\r\n    document.getElementById(\"g1\").style.pointerEvents = \"none\";\r\n    const animations = getBubbleSortAnimations(this.state.array);\r\n    this.func(animations.length);\r\n    const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const [bar1, bar2] = animations[i];\r\n\r\n      if (bar2 <= 3) {\r\n        setTimeout(() => {\r\n          if (bar2 == 1) arrayBars[bar1].style.backgroundColor = \"red\";\r\n          if (bar2 == 2) arrayBars[bar1].style.backgroundColor = \"lightskyblue\";\r\n          if (bar2 == 3) arrayBars[bar1].style.backgroundColor = \"green\";\r\n        }, i * ANIMATION_SPEED_MS);\r\n      } else {\r\n        setTimeout(() => {\r\n          arrayBars[bar1].style.height = `${bar2}px`;\r\n        }, i * ANIMATION_SPEED_MS);\r\n      }\r\n    }\r\n  }\r\n  insertionSort() {\r\n    document.getElementById(\"b1\").style.pointerEvents = \"none\";\r\n    document.getElementById(\"b2\").style.pointerEvents = \"none\";\r\n    document.getElementById(\"b3\").style.pointerEvents = \"none\";\r\n    document.getElementById(\"b4\").style.pointerEvents = \"none\";\r\n    document.getElementById(\"b5\").style.pointerEvents = \"none\";\r\n    document.getElementById(\"g1\").style.pointerEvents = \"none\";\r\n    const animations = getInsertionSortAnimations(this.state.array);\r\n    this.func(animations.length);\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const [idx, cmd] = animations[i];\r\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n      if (cmd == 1) {\r\n        setTimeout(() => {\r\n          const barStyle = arrayBars[idx].style;\r\n          barStyle.backgroundColor = \"red\";\r\n        }, i * ANIMATION_SPEED_MS);\r\n      } else if (cmd == 2) {\r\n        setTimeout(() => {\r\n          const barStyle = arrayBars[idx].style;\r\n          barStyle.backgroundColor = \"blue\";\r\n        }, i * ANIMATION_SPEED_MS);\r\n      } else if (cmd == 3) {\r\n        setTimeout(() => {\r\n          const barStyle = arrayBars[idx].style;\r\n          barStyle.backgroundColor = \"green\";\r\n        }, i * ANIMATION_SPEED_MS);\r\n      } else if (cmd == 4) {\r\n        setTimeout(() => {\r\n          const barStyle = arrayBars[idx].style;\r\n          barStyle.backgroundColor = \"lightskyblue\";\r\n        }, i * ANIMATION_SPEED_MS);\r\n      } else if (cmd >= 5) {\r\n        setTimeout(() => {\r\n          const [barId, barHeight] = animations[i];\r\n          const barStyle = arrayBars[barId].style;\r\n          barStyle.height = `${barHeight}px`;\r\n          barStyle.backgroundColor = \"green\";\r\n        }, i * ANIMATION_SPEED_MS);\r\n      }\r\n    }\r\n  }\r\n  heapSort() {\r\n    document.getElementById(\"b1\").style.pointerEvents = \"none\";\r\n    document.getElementById(\"b2\").style.pointerEvents = \"none\";\r\n    document.getElementById(\"b3\").style.pointerEvents = \"none\";\r\n    document.getElementById(\"b4\").style.pointerEvents = \"none\";\r\n    document.getElementById(\"b5\").style.pointerEvents = \"none\";\r\n    document.getElementById(\"g1\").style.pointerEvents = \"none\";\r\n    const animations = getHeapSortAnimations(this.state.array);\r\n    this.func(animations.length);\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const [idx, cmd] = animations[i];\r\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n      if (cmd == 1) {\r\n        setTimeout(() => {\r\n          const barStyle = arrayBars[idx].style;\r\n          barStyle.backgroundColor = \"red\";\r\n        }, i * ANIMATION_SPEED_MS);\r\n      } else if (cmd == 2) {\r\n        setTimeout(() => {\r\n          const barStyle = arrayBars[idx].style;\r\n          barStyle.backgroundColor = \"darkmagenta\";\r\n        }, i * ANIMATION_SPEED_MS);\r\n      } else if (cmd == 3) {\r\n        setTimeout(() => {\r\n          const barStyle = arrayBars[idx].style;\r\n          barStyle.backgroundColor = \"blue\";\r\n        }, i * ANIMATION_SPEED_MS);\r\n      } else if (cmd == 4) {\r\n        setTimeout(() => {\r\n          const barStyle = arrayBars[idx].style;\r\n          barStyle.backgroundColor = \"green\";\r\n        }, i * ANIMATION_SPEED_MS);\r\n      } else if (cmd == 5) {\r\n        setTimeout(() => {\r\n          const barStyle = arrayBars[idx].style;\r\n          barStyle.backgroundColor = \"lightskyblue\";\r\n        }, i * ANIMATION_SPEED_MS);\r\n      } else {\r\n        setTimeout(() => {\r\n          const [barId, barHeight] = animations[i];\r\n          const barStyle = arrayBars[barId].style;\r\n          barStyle.height = `${barHeight}px`;\r\n        }, i * ANIMATION_SPEED_MS);\r\n      }\r\n    }\r\n  }\r\n\r\n  func = (i) => {\r\n    setTimeout(() => {\r\n      document.getElementById(\"b1\").style.pointerEvents = \"auto\";\r\n      document.getElementById(\"b2\").style.pointerEvents = \"auto\";\r\n      document.getElementById(\"b3\").style.pointerEvents = \"auto\";\r\n      document.getElementById(\"b4\").style.pointerEvents = \"auto\";\r\n      document.getElementById(\"b5\").style.pointerEvents = \"auto\";\r\n      document.getElementById(\"g1\").style.pointerEvents = \"auto\";\r\n    }, i * ANIMATION_SPEED_MS);\r\n  };\r\n\r\n  render() {\r\n    const { array } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"navbar\">\r\n          <button\r\n            id=\"g1\"\r\n            disabled={this.state.disabled}\r\n            className=\"generate\"\r\n            onClick={() => this.resetArray()}\r\n          >\r\n            Generate new array\r\n          </button>\r\n          <button\r\n            id=\"b1\"\r\n            disabled={this.state.disabled}\r\n            className=\"srt\"\r\n            onClick={() => this.mergeSort()}\r\n          >\r\n            Merge Sort\r\n          </button>\r\n          <button\r\n            id=\"b2\"\r\n            disabled={this.state.disabled}\r\n            className=\"srt\"\r\n            onClick={() => this.quickSort()}\r\n          >\r\n            Quick Sort\r\n          </button>\r\n          <button\r\n            id=\"b3\"\r\n            disabled={this.state.disabled}\r\n            className=\"srt\"\r\n            onClick={() => this.bubbleSort()}\r\n          >\r\n            Bubble Sort\r\n          </button>\r\n          <button\r\n            id=\"b4\"\r\n            disabled={this.state.disabled}\r\n            className=\"srt\"\r\n            onClick={() => this.insertionSort()}\r\n          >\r\n            Insertion Sort\r\n          </button>\r\n          <button\r\n            id=\"b5\"\r\n            disabled={this.state.disabled}\r\n            className=\"srt\"\r\n            onClick={() => this.heapSort()}\r\n          >\r\n            Heap Sort\r\n          </button>\r\n        </div>\r\n        <div className=\"array-container\">\r\n          <div className=\"array-bar1\" style={{ height: 500 }}></div>\r\n          {array.map((value, idx) => (\r\n            <div\r\n              className=\"array-bar\"\r\n              key={idx}\r\n              style={{ height: value }}\r\n            ></div>\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction randomIntFromInterval(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n","import React from \"react\";\nimport Sortingvisualizer from \"./Sortingvisualizer/Sortingvisualizer.jsx\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Sortingvisualizer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}